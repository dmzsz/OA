@model IEnumerable<OA.WebApp.Models.Vessel>

@{
    ViewData["Title"] = "Index";
    Layout = "_Show";
}

<div style="background-color: black; width:100%; text-align:right;font-size:20px;font-weight:bold;height:30px;line-height:30px">
    <span style="color: lawngreen;">已开港&nbsp;&nbsp;&nbsp;</span>
    <span style="color: yellow;">已截关&nbsp;&nbsp;&nbsp;</span>
    <span style="color: red;">预计今天开船&nbsp;&nbsp;</span>
</div>

<table class="table vessels-table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Voy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Port)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OpDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CloseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ETD)
            </th>
            <th>
                @Html.DisplayName("内外")
            </th>
        </tr>
    </thead>
    <tbody>
        @{var index = 0;}
        @foreach (var item in Model)
        {
            index += 1;
            <tr @if (item.ETD < DateTime.Now) { @Html.DisplayName("style=color:red") }
                @if (index % 2 == 0) { @Html.DisplayName("class=even")} else { @Html.DisplayName("class=odd") }
                @if (item.OpDate <= DateTime.Now && item.CloseDate > DateTime.Now && item.ETD != DateTime.Now.Date) { @Html.DisplayName("style=color:lawngreen") }
                else if (item.CloseDate <= DateTime.Now && item.ETD != DateTime.Now.Date) { @Html.DisplayName("style=color:yellow") }
                else if (item.ETD == DateTime.Now.Date) { @Html.DisplayName("style=color:red") }

                }>
                <td>
                    <div>
                        @Html.DisplayFor(modelItem => item.Name)
                    </div>                  
                    @Html.DisplayFor(modelItem => item.LocalName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Voy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Port)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OpDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CloseDate)
                </td>
                <td>
                   @Html.DisplayFor(modelItem => item.ETD)
                </td>
                <td>
                    @(item.Trade ? "内" : "外")
                </td>

            </tr>
        }
    </tbody>
</table>

<style>
    body div.show_wrapper {
        padding-top: 5px;
    }
    .vessels-table thead {
        background-color: cornflowerblue;
    }

    .vessels-table {
        color: whitesmoke;
    }
</style>

<script>
    setInterval(function () {
        setColor();
    }, 30000);

    setInterval(function () {
        doscroll2(5);
    }, 4000);

    setInterval(function () {
        location.reload();
    }, 600000);
    
</script>