@model IEnumerable<OA.WebApp.ViewModels.T1DataDto>
@{
    ViewData["Title"] = "Show";
    Layout = "";
}

<!--[if IE 9 ]><html class="ie9"><![endif]-->
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <meta charset="UTF-8">
    <meta name="description" content="Violate Responsive Admin Template">
    <meta name="keywords" content="Super Admin, Admin, Template, Bootstrap">
    <title>Super Admin Responsive Template</title>
    <!-- CSS -->
    <link href="~/vendors/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/t1_style.css" rel="stylesheet">
    <style type="text/css">
        .title {
            height: 80px;
            display: -webkit-flex;
            display: flex;
            justify-content: flex-start;
            align-items: center;
        }

        #top-menu #date {
            font-size: 20px;
            padding-top: 10px;
            margin-right: 4px;
        }

        .title > .cangwei {
            font-size: 20px;
            font-weight: bold;
            padding: 0 10px;
            margin: 20px 0 0 100px;
            text-align: center;
            line-height: 35px;
            text-shadow: 0px -2px 2px #fff, 0px 2px 2px #fff, 2px 0px 2px #fff, -2px 0px 2px #fff;
        }

        .airline-type {
            position: relative;
            font-size: 25px;
            height: 60px;
            font-weight: bold;
        }

        .airline-type-span {
            position: absolute;
            width: 70px;
            top: -20px;
            left: 0px;
            padding: 0px 5px;
            transform: rotate(-15deg);
            -ms-transform: rotate(-15deg);
            -moz-transform: rotate(-15deg);
            -webkit-transform: rotate(-15deg);
            -o-transform: rotate(-15deg);
            display: block;
            border-radius: 15px !important;
        }

        .zhihang-color {
            border: 5px solid blue;
            color: blue;
        }

        .zhuangang-color {
            border: 5px solid red;
            color: red;
        }

        #header {
            height: 20px;
            min-height: 30px;
        }

        #top-menu #time, #top-menu #date {
            font-size: 15px;
        }

        .quick-stats {
            display: -webkit-flex;
            display: flex;
            padding: 0;
            margin: 5px 0 10px 0;
            font-size: 20px;
            width: 180px;
            height: 30px;
            justify-content: center;
            align-items: center;
        }

        .container-type {
            padding-right: 15px;
        }

        .double-title {
            margin-top: 20px
        }

            .double-title > span:last-child {
                display: block;
                margin: 5px 0 10px 0;
            }

        .owner-logo {
            width: 100px;
            margin: 8px 0 4px;
            border: 6px solid rgba(0,0,0,0.2);
        }

        .flot-base {
            width: 100% !important;
        }

        .main-chart {
            /*background-color: black;*/
        }
    </style>
    <script src="~/vendors/jquery/dist/jquery.min.js"></script>
    <script src="~/vendors/Chart.js/dist/jquery.flot.js"></script>
    <script src="~/vendors/Chart.js/dist/Chart.js"></script>
    <script src="~/js/site.js"></script>
    <script>
        function ShowChart(chartId, data) {
            var ctx = $.find("#canvas_" + chartId);
            var myChart = new Chart(ctx, {
                "type": "line",
                "data": {
                    "labels": data["date"],
                    "datasets": [{
                        "label": "20GP",
                        "data": data["20gp"],
                        "fill": false,
                        "borderColor": "rgb(75, 192, 192)",
                        "lineTension": 0.3
                    },
                    {
                        "label": "40GP",
                        "data": data["40gp"],
                        "fill": false,
                        "borderColor": "rgb(255, 193, 7)",
                        "lineTension": 0.3
                    },
                    {
                        "label": "40HC",
                        "data": data["40hc"],
                        "fill": false,
                        "borderColor": "rgb(121, 85, 72)",
                        "lineTension": 0.3
                    }]
                },
                "options": {

                    maintainAspectRatio: false,
                    legend: {
                        labels: {
                            // This more specific font property overrides the global property
                            fontColor: 'rgb(255, 255, 255)'
                        }
                    },
                    scales: {
                        yAxes: [{
                            //stacked: true,
                            gridLines: {
                                display: false,
                                color: "rgb(255, 255, 255)",
                            },
                            ticks: {
                                fontColor: "rgb(255, 255, 255)"
                            }
                        }],
                        xAxes: [{
                            gridLines: {
                                display: false,
                                color: "rgb(255, 255, 255)"
                            },
                            ticks: {
                                fontColor: "rgb(255, 255, 255)"
                            }
                        }]
                    }
                }
            });
        };
    </script>
</head>

<body id="skin-blur-kiwi" style="" class="">
    <header id="header" class="media">
        <div class="media-body">
            <div class="media" id="top-menu">
                <div id="time" class="pull-right">
                    <span id="hours">13</span> :
                    <span id="min">42</span> :
                    <span id="sec">13</span>
                </div>
                <div id="date" class="pull-right">
                    <span id="year">2018</span> :
                    <span id="mouth">8</span> :
                    <span id="date">6</span>
                    <span id="day">星期一</span>
                </div>
            </div>
        </div>
    </header>
    <div class="clearfix"></div>
    
    <script>
        var t1_char_data = new Map();
    </script>

    <partial name="_T1ViewList" />

    <script>
        // ajax取10条数据
        var limit = 10;
        // ajax 请求的次数
        var time = 0;
        // 轮播计时器
        var showlistInterval;

        var initPageShowFirst = function () {
            $(".t1_section:first").show();
            first_id = t1_char_data.keys().next().value;
            ShowChart(first_id, t1_char_data.get(parseInt(first_id)));
        };
        initPageShowFirst();

        function ShowT1ViewPartial() {
            var visible_t1 = $(".t1_section:visible").first();

            var next_t1;
            if (!visible_t1.next().attr("id")) {
                //visible_t1.hide();
                //next_t1 = $(".t1_section").first();
                //next_t1.show();
                // 执行到最后一个section，停止页面轮播
                clearInterval(showlistInterval);
                GetList(visible_t1);
            } else {
                visible_t1.hide();
                next_t1 = visible_t1.next();
                next_t1.show();
                var id = next_t1.attr('id').split("_")[1];
                ShowChart(id, t1_char_data.get(parseInt(id)));
            }

            //var id = next_t1.attr('id').split("_")[1];
            //ShowChart(id, t1_char_data.get(parseInt(id)));
        };

        // 调用远程数据返回10条section
        function GetList(visible_t1) {
            $.ajax({
                url: "/T1Data/UpdateT1ViewList",
                type: "POST",
                dataType: 'html',
                data: { limit: limit, offset: t1_char_data.size * (time++) },
                success: function (bodyText) {
                    //if (bodyText.trim() == "") { clearInterval(getT1ListInterval); }
                    
                    //$('section:last').after(bodyText); console.log(bodyText);
                    //$.each($(bodyText).find("script"), function (i, val) {
                    //    eval(val.innerHTML);
                    //});

                    if (bodyText.trim() == "") {
                        time = 0; // 重置定时器调用次数，取得数据库前10条数据
                        return GetList(visible_t1);
                    }

                    $('section:last').after(bodyText);
                    t1_char_data.clear(); // 清空map中的数据
                    // 放入新数据
                    $.each($(bodyText).find("script"), function (i, val) {
                        eval(val.innerHTML);
                    });

                    // 把新数据上面的一个section隐藏
                    visible_t1.hide();
                    // 拿到新插入的section
                    next_t1 = visible_t1.next();
                    next_t1.prevAll("section").remove();
                    // 显示section
                    next_t1.show();
                    // 显示折线图
                    var id = next_t1.attr('id').split("_")[1];
                    ShowChart(id, t1_char_data.get(parseInt(id)));
                    // 执行轮播页面
                    showlist();
                }
            });
        }

        // 每隔5秒，轮播下一个页面
        
        var showlist = function () {
            showlistInterval = setInterval(function () {
                ShowT1ViewPartial(time);
            }, 5000)
        };
        showlist();

        //var getT1ListInterval = setInterval(function () {
        //    GetList();
        //}, 40000);

        t1_data.clock();
    </script>
    
</body>

</html>